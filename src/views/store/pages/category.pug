extends ../layout

block layout-styles
    style.
        .card {
            transition: transform .5s;
        }

        .card:hover {
            transform: scale(1.1);
        }

        #categoryBannerImg {
            transition: transform .5s;
        }

        #categoryBannerImg:hover {
            transform: scale(1.1);
        }

        .noUi-connect {
            background: var(--bs-black);
        }

block layout-content
    - const photo = categoryPhotos[category]

    .overflow-hidden.d-flex.justify-content-center.align-items-center.position-relative(style="height: 20rem")
        h1.text-center.text-light.z-1 #{category.charAt(0).toUpperCase() + category.slice(1)}

        img#categoryBannerImg(
            src=`https://images.unsplash.com/photo-${photo.link}?w=1920&h=1080&fit=crop&fm=jpg`
            alt=`Photo by https://unplash.com/@${photo.author}`
            style="filter: brightness(33%)"
        ).w-100.h-100.position-absolute.top-0.start-0.object-fit-cover

    .container-sm.py-5
        .row.g-4
            form#filterForm.col-12.col-md-6.col-lg-4.col-xl-3
                .d-flex.align-items-center.gap-3.mb-4
                    span Filters
                    hr.w-100.m-0

                div.mb-3
                    h6.fw-bold.mb-3 Brand

                    select(name="brand").form-select
                        option(value="" checked=!filteredBrand) All brands

                        each brand in brands
                            option(value=brand checked=(filteredBrand === brand))= brand

                div.mb-3
                    h6.fw-bold.mb-3 Brand

                    #priceFilter.mb-3

                    input(type="hidden" name="priceRange" value=priceRange.join("-"))

                    .d-flex.justify-content-between
                        - const priceTypes = ["min", "max"]

                        each [price, type] of priceRange.map((price, i) => [price, priceTypes[i]])
                            span(id=type)= price.toLocaleString("vi-VN") + "đ"

                .d-flex.gap-2
                    button(type="submit").btn.btn-dark Submit
                    button(type="reset").btn.btn-outline-dark Reset

            .col
                .row.row-cols-lg-2.row-cols-xl-3.g-4
                    each product in products
                        include ../partials/product-card
                            - var product = product

    script.
        const filterForm = document.getElementById("filterForm");
        const priceFilter = document.getElementById("priceFilter");
        const priceRange = document.querySelector("[name=priceRange]");

        filterForm.onreset = () => {
            priceRange.value = "";
            filterForm.submit();
        }

        noUiSlider.create(priceFilter, {
            start: [#{priceRange}],
            connect: true,
            range: { min: 0, max: 100000000 },
            step: 100000
        });

        priceFilter.noUiSlider.on("update", (values) => {
            for (const [i, type] of [[0, "min"], [1, "max"]]) {
                document.getElementById(type).textContent =
                    Number(values[i]).toLocaleString("vi-VN") + "đ";
            }

            priceRange.value = values.join("-");
        });