extends ../layout

block layout-content
    .container-sm.py-5.table-responsive.flex-fill
        h1.mb-5 Your cart

        table#cartTable.table.text-nowrap
            - const totalPrice = cart.reduce((totalPrice, item) => totalPrice + item.price * item.amount, 0)

            caption.table-caption.p-3
                span(style="line-height: 2.5rem").total-price.text-dark Total price: #{totalPrice.toLocaleString("vi-VN")}đ

                form(method="POST" action="/payment/create")
                    input(type="hidden" name="items" value=JSON.stringify(cart))

                    input(type="hidden" name="totalAmount" value=totalPrice)

                    button(type="submit" disabled=(cart.length === 0)).btn.btn-dark.float-end
                        iconify-icon(icon="mynaui:credit-card")
                        span.ms-3 Proceed to checkout

            thead
                th
                th Product name
                th Specs
                th Price
                th Amount
                th
            
            tbody.align-middle
                each item in cart
                    tr(id=item.id)
                        td
                            img(
                                src=`/public/images/products/${item.productId}/thumb.jpg`
                                onerror="this.onerror = null; this.src='/public/images/products/thumb-notfound.jpg'"
                                width="80" height="80"
                            )

                        td #{item.productName}

                        td
                            ul.m-0
                                each [spec, value] of Object.entries(item.specs)
                                    li #{spec}: #{value}

                        td(data-price=item.price).price #{item.price.toLocaleString("vi-VN")}đ

                        td.amount #{item.amount}

                        td
                            .d-flex.align-items-center.gap-2
                                button(type="button" data-bs-item=item).cart-minus.btn.btn-outline-dark.px-1
                                    iconify-icon(icon="mynaui:minus")
                                button(type="button" data-bs-item=item).cart-plus.btn.btn-outline-dark.px-1
                                    iconify-icon(icon="mynaui:plus")

                                form(method="POST" action=`/cart/remove-item?id=${item.id}`)
                                    button(type="submit").btn.btn-outline-danger
                                        iconify-icon(icon="mynaui:trash")

                                #requestSpinner.spinner-border.spinner-border-sm.ms-4.opacity-0(role="status")
                                    span.visually-hidden Sending requests...

    script.
        const table = document.getElementById("cartTable");
        const spinner = document.getElementById("requestSpinner");

        for (const button of document.getElementsByClassName("cart-plus")) {
            button.onclick = async (event) => {
                const item = JSON.parse(button.dataset.bsItem);

                spinner.classList.remove("opacity-0");

                await fetch(`/cart/add-item?id=${item.id}`, {
                    method: "POST"
                });

                const row = document.getElementById(item.id)
                    .getElementsByClassName("amount")[0];

                row.textContent = Math.min(parseInt(row.textContent) + 1, item.stock);

                updateTotalPrice();

                spinner.classList.add("opacity-0");
            }
        }

        for (const button of document.getElementsByClassName("cart-minus")) {
            button.onclick = async (event) => {
                const item = JSON.parse(button.dataset.bsItem);

                spinner.classList.remove("opacity-0");

                await fetch(`/cart/subtract-item?id=${item.id}`, {
                    method: "POST"
                });

                const row = document.getElementById(item.id)
                    .getElementsByClassName("amount")[0];

                row.textContent = Math.max(parseInt(row.textContent) - 1, 1);

                updateTotalPrice();

                spinner.classList.add("opacity-0");
            }
        }

        function updateTotalPrice() {
            let totalPrice = 0;

            for (const row of table.querySelectorAll("tbody tr")) {
                const price = parseInt(row.getElementsByClassName("price")[0].dataset.price);
                const amount = parseInt(row.getElementsByClassName("amount")[0].textContent);

                totalPrice += price * amount;
            }

            table.getElementsByClassName("total-price")[0]
                .textContent = `Total price: ${totalPrice.toLocaleString("vi-VN")}đ`;
        }